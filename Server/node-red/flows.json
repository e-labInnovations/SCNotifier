[
    {
        "id": "dbb98f2a.d9d2f",
        "type": "tab",
        "label": "SCNotifier - Main",
        "disabled": false,
        "info": ""
    },
    {
        "id": "67c61941.053d58",
        "type": "tab",
        "label": "Screenshot",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f5dc855c.c138b8",
        "type": "subflow",
        "name": "Save Notification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 200,
                "wires": [
                    {
                        "id": "5b90155f.73b04c"
                    },
                    {
                        "id": "1ecc750a.16c5ab"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b3cf5606.77faa8",
        "type": "websocket-listener",
        "path": "/",
        "wholemsg": "true"
    },
    {
        "id": "7fdf9dd5.fa14c4",
        "type": "ui_tab",
        "name": "TimeTable",
        "icon": "grid_on",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b7e6c1c.f2fd24",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dcd3d5bf.8e9728",
        "type": "ui_tab",
        "name": "Birthdays",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1be297df.243b28",
        "type": "ui_group",
        "name": "TimeTable",
        "tab": "7fdf9dd5.fa14c4",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "11b806f2.3ae069",
        "type": "ui_group",
        "name": "College Notification",
        "tab": "1b7e6c1c.f2fd24",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b14e048c.ef48f8",
        "type": "ui_group",
        "name": "HOD's Notification",
        "tab": "1b7e6c1c.f2fd24",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "79fc1280.9bd0cc",
        "type": "ui_group",
        "name": "Class Notification",
        "tab": "1b7e6c1c.f2fd24",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d9b8c3f8.6ebb4",
        "type": "ui_group",
        "name": "Site Notifications",
        "tab": "1b7e6c1c.f2fd24",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fe25ed93.26f43",
        "type": "ui_group",
        "name": "Birthdays",
        "tab": "dcd3d5bf.8e9728",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "8af5f90d.0cf9a8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5b90155f.73b04c",
        "type": "function",
        "z": "f5dc855c.c138b8",
        "name": "Convert to Query",
        "func": "msg.payload = {\n    action : 'updateNotification',\n    name : msg.topic,\n    notification : msg.payload.notification\n}\n\nmsg.newNot = msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 200,
        "wires": [
            [
                "ea96fa23.ccbf88"
            ]
        ]
    },
    {
        "id": "71ae170f.9f2598",
        "type": "catch",
        "z": "f5dc855c.c138b8",
        "name": "",
        "scope": [
            "adb610b1.ca45f"
        ],
        "uncaught": false,
        "x": 650,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b7674bd.37140b8",
        "type": "function",
        "z": "f5dc855c.c138b8",
        "name": "set Notification",
        "func": "\nreturn {payload: 'Notification updated'};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "bf2c9566.992a88",
        "type": "function",
        "z": "f5dc855c.c138b8",
        "name": "Save Data",
        "func": "if(msg.topic == 1) {\n    var collegeNot = global.get('collegeNot');\n    collegeNot.notification = msg.newNot.notification;\n    collegeNot.show = msg.newNot.show;\n    collegeNot.time = msg.newNot.time;\n    global.set('collegeNot', collegeNot)\n    collegeNot.topic = collegeNot.id;\n}\nif(msg.topic == 2) {\n    var hodNot = global.get('hodNot');\n    hodNot.notification = msg.newNot.notification;\n    hodNot.show = msg.newNot.show;\n    hodNot.time = msg.newNot.time;\n    global.set('hodNot', hodNot)\n    hodNot.topic = hodNot.id;\n}\nif(msg.topic == 3) {\n    var classNot = global.get('classNot');\n    classNot.notification = msg.newNot.notification;\n    classNot.show = msg.newNot.show;\n    classNot.time = msg.newNot.time;\n    global.set('classNot', classNot)\n    classNot.topic = classNot.id;\n}\nif(msg.topic == 4) {\n    var gptcNot = global.get('gptcNot');\n    gptcNot.notification = msg.newNot.notification;\n    gptcNot.show = msg.newNot.show;\n    gptcNot.time = msg.newNot.time;\n    global.set('gptcNot', gptcNot)\n    gptcNot.topic = gptcNot.id;\n}\nif(msg.topic == 5) {\n    var sbteNot = global.get('sbteNot');\n    sbteNot.notification = msg.newNot.notification;\n    sbteNot.show = msg.newNot.show;\n    sbteNot.time = msg.newNot.time;\n    global.set('sbteNot', sbteNot)\n    sbteNot.topic = sbteNot.id;\n}",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 140,
        "wires": []
    },
    {
        "id": "1ecc750a.16c5ab",
        "type": "debug",
        "z": "f5dc855c.c138b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "ea96fa23.ccbf88",
        "type": "http request",
        "z": "f5dc855c.c138b8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "https://script.google.com/macros/s/AKfycby3y0Olw-bE9X7l0XG6jriIgvNXkVD1cnUyASIbl0ctb-dgWZRF1ZHSToyNJp0JWH1cKA/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "36fc192a.b01e66",
                "b7674bd.37140b8"
            ]
        ]
    },
    {
        "id": "36fc192a.b01e66",
        "type": "debug",
        "z": "f5dc855c.c138b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "df63477a.e3e048",
        "type": "function",
        "z": "dbb98f2a.d9d2f",
        "name": "Filter Data",
        "func": "var mainData = JSON.parse(msg.payload);\nvar notifications = mainData.notifications;\nvar collegeNot = notifications.find( ({ name }) => name === 'College' );\nvar hodNot = notifications.find( ({ name }) => name === 'HOD' );\nvar classNot = notifications.find( ({ name }) => name === 'Class' );\nvar gptcNot = notifications.find( ({ name }) => name === 'gptcthirurangadi.in' );\nvar sbteNot = notifications.find( ({ name }) => name === 'sbte.kerala.gov.in' );\nvar sitttrNot = notifications.find( ({ name }) => name === 'sitttrkerala.ac.in' );\n\nvar boardData = [];\nboardData.push({type: 'CP', data: mainData.currentPeriod});\nboardData.push({type: 'NTF', data: classNot});\nboardData.push({type: 'NTF', data: hodNot});\nboardData.push({type: 'NTF', data: collegeNot});\nboardData.push({type: 'NTF', data: gptcNot});\nboardData.push({type: 'NTF', data: sbteNot});\nboardData.push({type: 'NTF', data: sitttrNot});\nboardData.push({type: 'WX', data: mainData.weather});\n\nglobal.set('collegeNot', collegeNot);\nglobal.set('hodNot', hodNot);\nglobal.set('classNot', classNot);\nglobal.set('gptcNot', gptcNot);\nglobal.set('sbteNot', sbteNot);\nglobal.set('sitttrNot', sitttrNot);\n\nglobal.set('boardData', boardData);\nglobal.set('clients', {});\n\ncollegeNot = {\n    topic : collegeNot.name,\n    payload : {\n        notificationId: collegeNot.notificationId,\n        notification: collegeNot.notification,\n        show: collegeNot.show,\n        time: collegeNot.readingTime,\n        name: collegeNot.name,\n    }\n}\n\nhodNot = {\n    topic : hodNot.name,\n    payload : {\n        notificationId: hodNot.notificationId,\n        notification: hodNot.notification,\n        show: hodNot.show,\n        time: hodNot.readingTime,\n        name: hodNot.name,\n    }\n}\n\nclassNot = {\n    topic : classNot.name,\n    payload : {\n        notificationId: classNot.notificationId,\n        notification: classNot.notification,\n        show: classNot.show,\n        time: classNot.readingTime,\n        name: classNot.name,\n    }\n}\ngptcNot = {\n    topic : gptcNot.name,\n    payload : {\n        notificationId: gptcNot.notificationId,\n        notification: gptcNot.notification,\n        show: gptcNot.show,\n        time: gptcNot.readingTime,\n        name: gptcNot.name,\n    }\n}\nsbteNot = {\n    topic : sbteNot.name,\n    payload : {\n        notificationId: sbteNot.notificationId,\n        notification: sbteNot.notification,\n        show: sbteNot.show,\n        time: sbteNot.readingTime,\n        name: sbteNot.name,\n    }\n}\nsitttrNot = {\n    topic : sitttrNot.name,\n    payload : {\n        notificationId: sitttrNot.notificationId,\n        notification: sitttrNot.notification,\n        show: sitttrNot.show,\n        time: sitttrNot.readingTime,\n        name: sitttrNot.name,\n    }\n}\n\nreturn [collegeNot, hodNot, classNot, gptcNot, sbteNot, sitttrNot]",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 540,
        "wires": [
            [
                "3dfee407.19977c"
            ],
            [
                "c5fd4c38.35119"
            ],
            [
                "1ad520.daf97ae"
            ],
            [
                "81efacee.f7c8f",
                "7b170389.c7b52c"
            ],
            [
                "96a3d4a5.df3ed8",
                "6a78b30c.c9899c"
            ],
            [
                "c9ef5774.4058b8",
                "120aa537.89a2ab"
            ]
        ]
    },
    {
        "id": "65dcb480.5f88fc",
        "type": "function",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "func": "msg.payload = msg.payload.rows;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 760,
        "wires": [
            [
                "964dbfbb.a4a61"
            ]
        ]
    },
    {
        "id": "d3e5e581.423208",
        "type": "debug",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 760,
        "wires": []
    },
    {
        "id": "fa1fe8c8.3cedd8",
        "type": "inject",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "5fa99be0.01fb04"
            ]
        ]
    },
    {
        "id": "5fa99be0.01fb04",
        "type": "http request",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://script.google.com/macros/s/AKfycby3y0Olw-bE9X7l0XG6jriIgvNXkVD1cnUyASIbl0ctb-dgWZRF1ZHSToyNJp0JWH1cKA/exec?action=getData",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "df63477a.e3e048"
            ]
        ]
    },
    {
        "id": "314cba47.91b8d6",
        "type": "subflow:f5dc855c.c138b8",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "env": [],
        "x": 950,
        "y": 520,
        "wires": []
    },
    {
        "id": "a38371b0.aff07",
        "type": "websocket in",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "server": "b3cf5606.77faa8",
        "client": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "4fb222e1.85337c"
            ]
        ]
    },
    {
        "id": "4fb222e1.85337c",
        "type": "function",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "func": "let uid = msg._session.id;\nlet clients = global.get('clients');\nlet clientPos = clients[uid];\nlet boardData = global.get('boardData');\n\nif(clientPos != undefined) {\n    // node.warn('got it');\n    // node.warn(clientPos);\n} else {\n    // node.warn('Sorry');\n    clientPos = 0;\n}\n\nlet output = {\n    type : \"Error\",\n    data : {\n        message : \"Command not found\"\n    }\n};\nif(msg.payload == 'connected'){\n    output = JSON.parse(JSON.stringify(boardData[clientPos]));\n} else if (msg.payload == 'next') {\n    clientPos++;\n    clientPos = clientPos == boardData.length?0:clientPos;\n    output = JSON.parse(JSON.stringify(boardData[clientPos]));\n} else if (msg.payload == 'previous') {\n    clientPos--;\n    clientPos = clientPos == -1?boardData.length-1:clientPos;\n    output = JSON.parse(JSON.stringify(boardData[clientPos]));\n}\nif(output.type == \"NTF\") {\n    //output.data.notification = output.data.notification.replace(/\\n/g, \"\\r\\n\")\n}\n\nconst getTime = () => {\n  var currentTime = new Date();\n  var currentOffset = currentTime.getTimezoneOffset();\n  var ISTOffset = 330;   // IST offset UTC +5:30 \n  var date = new Date(currentTime.getTime() + (ISTOffset + currentOffset)*60000);\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  hours = hours < 10 ? '0'+hours : hours;\n  minutes = minutes < 10 ? '0'+minutes : minutes;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n}\n\nvar fetch = clientPos == boardData.length-1?{pyload:\"fetch\"}:null;\nclients[uid] = clientPos;\nglobal.set('clients', clients);\noutput.time = getTime();\nreturn [output, fetch];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "48420328.6ae08c"
            ],
            [
                "962eb1ff.2e969"
            ]
        ]
    },
    {
        "id": "48420328.6ae08c",
        "type": "websocket out",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "server": "b3cf5606.77faa8",
        "client": "",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "3dfee407.19977c",
        "type": "ui_form",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "label": "",
        "group": "11b806f2.3ae069",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "College Notification",
                "value": "notification",
                "type": "multiline",
                "required": true,
                "rows": 3
            },
            {
                "label": "Show Notification",
                "value": "show",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Notification Duration",
                "value": "time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "notification": "",
            "show": false,
            "time": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 730,
        "y": 380,
        "wires": [
            [
                "314cba47.91b8d6"
            ]
        ]
    },
    {
        "id": "c5fd4c38.35119",
        "type": "ui_form",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "label": "",
        "group": "b14e048c.ef48f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "HOD's Notification",
                "value": "notification",
                "type": "multiline",
                "required": true,
                "rows": 3
            },
            {
                "label": "Show Notification",
                "value": "show",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Notification Duration",
                "value": "time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "notification": "",
            "show": false,
            "time": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 730,
        "y": 420,
        "wires": [
            [
                "314cba47.91b8d6"
            ]
        ]
    },
    {
        "id": "1ad520.daf97ae",
        "type": "ui_form",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "label": "",
        "group": "79fc1280.9bd0cc",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Class Notification",
                "value": "notification",
                "type": "multiline",
                "required": true,
                "rows": 3
            },
            {
                "label": "Show Notification",
                "value": "show",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Notification Duration",
                "value": "time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "notification": "",
            "show": false,
            "time": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 730,
        "y": 460,
        "wires": [
            [
                "314cba47.91b8d6"
            ]
        ]
    },
    {
        "id": "81efacee.f7c8f",
        "type": "ui_form",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "label": "",
        "group": "d9b8c3f8.6ebb4",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Show Notification",
                "value": "show",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Notification Duration",
                "value": "time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "show": false,
            "time": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 730,
        "y": 500,
        "wires": [
            [
                "314cba47.91b8d6"
            ]
        ]
    },
    {
        "id": "96a3d4a5.df3ed8",
        "type": "ui_form",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "label": "",
        "group": "d9b8c3f8.6ebb4",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Show Notification",
                "value": "show",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Notification Duration",
                "value": "time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "show": false,
            "time": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 730,
        "y": 580,
        "wires": [
            [
                "314cba47.91b8d6"
            ]
        ]
    },
    {
        "id": "c9ef5774.4058b8",
        "type": "ui_form",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "label": "",
        "group": "d9b8c3f8.6ebb4",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Show Notification",
                "value": "show",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Notification Duration",
                "value": "time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "show": false,
            "time": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 730,
        "y": 660,
        "wires": [
            [
                "314cba47.91b8d6"
            ]
        ]
    },
    {
        "id": "7b170389.c7b52c",
        "type": "ui_template",
        "z": "dbb98f2a.d9d2f",
        "group": "d9b8c3f8.6ebb4",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div id=\"gptc\">\n    <h3> gptcthirurangadi.in </h3>\n    <p>{{msg.payload.notification}}</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 740,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "6a78b30c.c9899c",
        "type": "ui_template",
        "z": "dbb98f2a.d9d2f",
        "group": "d9b8c3f8.6ebb4",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div id=\"sbte\">\n    <h3> sbte.kerala.gov.in </h3>\n    <p>{{msg.payload.notification}}</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 740,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "120aa537.89a2ab",
        "type": "ui_template",
        "z": "dbb98f2a.d9d2f",
        "group": "d9b8c3f8.6ebb4",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div id=\"sitttr\">\n    <h3> sitttrkerala.ac.in </h3>\n    <p>{{msg.payload.notification}}</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 740,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "964dbfbb.a4a61",
        "type": "ui_template",
        "z": "dbb98f2a.d9d2f",
        "group": "fe25ed93.26f43",
        "name": "",
        "order": 0,
        "width": "12",
        "height": "8",
        "format": "<style>\n\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */\n    \n.animate-enter, \n.animate-leave\n{ \n    -webkit-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -moz-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -ms-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -o-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    position: relative;\n    display: block;\n} \n\n.animate-enter.animate-enter-active, \n.animate-leave {\n    opacity: 1;\n    top: 0;\n    height: 30px;\n}\n\n.animate-leave.animate-leave-active,\n.animate-enter {\n    opacity: 0;\n    top: -50px;\n    height: 0px;\n}\n    \n.container\n{\n    max-height: 450px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n}\n</style>\n\n<div>\n     <form>\n      <span class=\"input-group\">\n          <i class=\"fa fa-search\"></i>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" ng-model=\"search\">\n      </span>      \n  </form>\n  <div class=\"container\" ng-app=\"sortApp\">\n\n      <table>\n        <thead>\n        <tr style=\"width:100%\">\n            <td>\n          <a href=\"#\">\n            Roll No\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'nname'; sortReverse = !sortReverse\">\n            Name \n            <span ng-show=\"sortType == 'name' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'name' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'dob'; sortReverse = !sortReverse\">\n          Date Of Birth \n            <span ng-show=\"sortType == 'dob' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'dob' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\n          </tr>\n          </thead>\n          <tbody>\n        <tr ng-repeat=\"student in msg.payload | orderBy:sortType:sortReverse | filter:search track by $index\" ng-click=\"msg.payload = student;send(msg);\" style=\"width:100%\" flex>\n                <td><b ng-bind=\"student.rollNo\"></b></td>\n               <td ng-bind=\"student.name\"></td>\n               <td ng-bind=\"student.dob\"></td>\n         </tr>\n        </tbody>\n      </table>\n\n</div>\n</div>\n</body></html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 700,
        "y": 760,
        "wires": [
            [
                "d3e5e581.423208"
            ]
        ]
    },
    {
        "id": "2660a5a5.ba220a",
        "type": "http in",
        "z": "67c61941.053d58",
        "name": "",
        "url": "/image",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "f8a80df3.556c9",
                "4dcf98da.5fba68"
            ]
        ]
    },
    {
        "id": "769165e4.dc545c",
        "type": "http response",
        "z": "67c61941.053d58",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "f8a80df3.556c9",
        "type": "function",
        "z": "67c61941.053d58",
        "name": "",
        "func": "var puppeteer = global.get('puppeteer');\nvar url = \"https://scnotifier.herokuapp.com/notification/next\";\nvar option = {\n    args: ['--no-sandbox'],\n    defaultViewport: {width: 640, height: 480}\n};\n\npuppeteer.launch(option).then(async browser => {\n    const option = {\n        type: 'jpeg',\n        fullPage: true\n    };\n    const page = await browser.newPage();\n    await page.goto(url);\n    const buffer = await page.screenshot(option);\n    await browser.close();\n\n    msg.payload = buffer;\n    node.send(msg);\n});\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "323c0900.6a09b8",
                "42fa02a8.4c18fc"
            ]
        ]
    },
    {
        "id": "d9b14096.bd6fc",
        "type": "inject",
        "z": "67c61941.053d58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "f8a80df3.556c9"
            ]
        ]
    },
    {
        "id": "4dcf98da.5fba68",
        "type": "debug",
        "z": "67c61941.053d58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 40,
        "wires": []
    },
    {
        "id": "d6625e25.dc0ae",
        "type": "http in",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "url": "/notification/:command",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "1523f57a.28612b"
            ]
        ]
    },
    {
        "id": "fa43f617.742228",
        "type": "http response",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "5799aa9e.021654",
        "type": "http in",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "url": "/notification",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "1523f57a.28612b"
            ]
        ]
    },
    {
        "id": "1523f57a.28612b",
        "type": "function",
        "z": "dbb98f2a.d9d2f",
        "name": "getData",
        "func": "var command = msg.req.params.command;\nvar mac = msg.payload.mac;\nvar ip = msg.req.headers['x-forwarded-for'] || msg.req.socket.remoteAddress;\n\nlet uid = mac?mac:ip;\nlet clients = global.get('clients');\nlet clientPos = clients[uid];\nlet boardData = global.get('boardData');\ncommand = command?command:\"first\";\n\nif(clientPos != undefined) {\n    // node.warn('got it');\n    // node.warn(clientPos);\n} else {\n    // node.warn('Sorry');\n    clientPos = 0;\n}\n\nlet output = {\n    type : \"Error\",\n    data : {\n        message : \"Command not found\"\n    }\n};\nif(command == 'first'){\n    output = JSON.parse(JSON.stringify(boardData[clientPos]));\n} else if (command == 'next') {\n    clientPos++;\n    clientPos = clientPos == boardData.length?0:clientPos;\n    output = JSON.parse(JSON.stringify(boardData[clientPos]));\n} else if (command == 'previous') {\n    clientPos--;\n    clientPos = clientPos == -1?boardData.length-1:clientPos;\n    output = JSON.parse(JSON.stringify(boardData[clientPos]));\n}\nif(output.type == \"NTF\") {\n    output.data.notification = output.data.notification.replace(/\\n/g, \"<br />\")\n}\n\nconst getTime = () => {\n  var currentTime = new Date();\n  var currentOffset = currentTime.getTimezoneOffset();\n  var ISTOffset = 330;   // IST offset UTC +5:30 \n  var date = new Date(currentTime.getTime() + (ISTOffset + currentOffset)*60000);\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  hours = hours < 10 ? '0'+hours : hours;\n  minutes = minutes < 10 ? '0'+minutes : minutes;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n}\n\nclients[uid] = clientPos;\nglobal.set('clients', clients);\noutput.time = getTime();\nmsg.data = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "60c30a94.823644"
            ]
        ]
    },
    {
        "id": "181535eb.a3e40a",
        "type": "debug",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 200,
        "wires": []
    },
    {
        "id": "60c30a94.823644",
        "type": "function",
        "z": "dbb98f2a.d9d2f",
        "name": "Prepare HTML",
        "func": "var title = \"\";\nvar main_content = \"\";\nconst getIcon = skycode => {\n    skycode = parseInt(skycode);\n  switch (skycode) {\n    case 0: //thunderstorm\n    case 1:\n    case 2:\n    case 3:\n    case 4: //Thunderstorm\n      return \"https://ssl.gstatic.com/onebox/weather/64/thunderstorms.png\";\n    case 6: //sleet\n      return \"https://ssl.gstatic.com/onebox/weather/64/sleet.png\";\n    case 11: //Scattered Showers\n      return \"\";\n    case 12: //rain\n      return \"https://ssl.gstatic.com/onebox/weather/64/rain.png\";\n    case 13: //flurries\n      return \"https://ssl.gstatic.com/onebox/weather/64/snow_light.png\";\n    case 14: //Snow\n    case 15:\n    case 16:\n      return \"https://ssl.gstatic.com/onebox/weather/64/snow.png\";\n    case 20: //fog\n    case 21: //hazy / haze\n    case 22:\n      return \"https://ssl.gstatic.com/onebox/weather/64/fog.png\";\n    case 24: //Wind\n      return \"\";\n    case 26: //Cloudy\n      return \"https://ssl.gstatic.com/onebox/weather/64/cloudy.png\";\n    case 27: //mostlycloudy\n    case 28: //Mostly Cloudy\n      return \"https://ssl.gstatic.com/onebox/weather/64/cloudy_s_sunny.png\";\n    case 29: //Partly Cloudy Night\n      return \"https://ssl.gstatic.com/onebox/weather/64/rain_s_cloudy.png\";\n    case 29: //partlycloudy\n    case 30: //Partly Cloudy\n      return \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\";\n    case 31: //sunny\n    case 32: //Sunny\n      return \"https://ssl.gstatic.com/onebox/weather/64/sunny.png\";\n    case 33: //mostlysunny\n    case 34: //Mostly Sunny\n      return \"https://ssl.gstatic.com/onebox/weather/64/sunny_s_cloudy.png\";\n    case 37: //Isolated Thunderstorms\n      return \"\";\n    case 38: //Scattered Thunderstorms\n      return \"\";\n    case 39: //chancerain\n      return \"https://ssl.gstatic.com/onebox/weather/64/rain_s_sunny.png\";\n    case 41: //chancesnow\n      return \"https://ssl.gstatic.com/onebox/weather/64/sunny_s_snow.png\";\n    case 47: //Scattered Thunderstorms Night\n      return \"\";\n    case \"chanceflurries\":\n      return \"https://ssl.gstatic.com/onebox/weather/64/sunny_s_snow.png\";\n    case \"chancesleet\":\n      return \"https://ssl.gstatic.com/onebox/weather/64/snow_s_sunny.png\";\n    case \"chancetstorms\":\n      return \"https://ssl.gstatic.com/onebox/weather/64/sunny_s_rain.png\";\n    default:\n      return \"\";\n  }\n}\n\nif(msg.data.type == \"NTF\") {\n    title = msg.data.data.name;\n    main_content = `<p> ${msg.data.data.notification} </p>`;\n} else if(msg.data.type == \"CP\") {\n    title = \"Current Period\";\n    main_content = `\n    <table style=\"width:100%\">\n      <tr>\n        <th>Period NO</th>\n        <td>${msg.data.data.period}</td>\n      </tr>\n      <tr>\n        <th>Subject</th>\n        <td>${msg.data.data.subject}</td>\n      </tr>\n      <tr>\n        <th>Teacher</th>\n        <td>${msg.data.data.teacher}</td>\n      </tr>\n      <tr>\n        <th>Starting Time</th>\n        <td>${msg.data.data.startAt}</td>\n      </tr>\n      <tr>\n        <th>Ending Time</th>\n        <td>${msg.data.data.endAt}</td>\n      </tr>\n    </table>`;\n}  else if(msg.data.type == \"WX\") {\n    title = \"Weather\";\n    main_content = `\n\t<div class=\"current-weather\">\n    \t<h3>${msg.data.data.currentWeather.location}</h3>\n        <div>${msg.data.data.currentWeather.timestamp}</div>\n        <div class=\"current-weather-middle\">\n          <div class=\"current-weather-primary\">\n              <span class=\"TemperatureValue\">${msg.data.data.currentWeather.tempValue}</span>\n              <div class=\"phraseValue\">${msg.data.data.currentWeather.phraseValue}</div>\n          </div>\n          <div class=\"current-weather-secondary\">\n              <img src=\"${getIcon(msg.data.data.currentWeather.skycode)}\">\n              <div class=\"phraseValue\">${msg.data.data.currentWeather.tempHiLoValue}</div>\n          </div>\n        </div>\n        <div>${msg.data.data.currentWeather.precipValue}</div>\n  \t</div>\n    <br />\n    \n    <div class=\"hourly-forcast\">\n    \t<h3>Hourly Forecast</h3>\n        <ul class=\"weatherTable-columns\">\n            ${msg.data.data.hourlyForcast.map(hourWeather => {\n                return `\n                    <li class=\"column\">\n                    \t<div class=\"column-innerWrapper\">\n                        \t<h3 class=\"column-label\">${hourWeather.timestamp}</h3>\n                            <span class=\"column-temp\">${hourWeather.tempValue}</span>\n                            <div class=\"column-icon\"><img src=\"${getIcon(hourWeather.skycode)}\"></div>\n                            <span class=\"column-precip\">${hourWeather.precipValue}</span>\n                        </div>\n                    </li>\n                `;\n            }).join('')}\n        </ul>\n          \t</div>\n    `;\n} else {\n    title = \"Error\";\n    main_content = JSON.stringify(msg.data.data);\n}\n\nvar html = `\n<html>\n    <head>\n        <title>SCNotifier</title>\n        <style>\n            html, body {\n                max-width: 640px;\n                max-height: 480px;\n                margin: 0px;\n                padding: 4px;\n            }\n            .time {\n              position: absolute;\n              bottom: 5px;\n              right:5px;\n              padding: 3px 6px;\n              background-color: rgb(255, 0, 0);\n              color: #ffffff;\n              border-radius: 10px;\n            }\n            table, th, td {\n              border: 1px solid black;\n              border-collapse: collapse;\n              padding: 10px 5px;\n            }\n            th {\n            \ttext-align: left;\n            }\n            \n            h3 {\n            \tmargin: 5px 5px 10px 0px;\n            }\n            .current-weather {\n            \tborder: 1px solid #0000ff;\n                padding: 5px;\n            }\n            .current-weather-middle {\n            \tdisplay: flex;\n                justify-content: space-between;\n            }\n            .current-weather-primary {\n            \ttext-align: left;\n                flex-direction: column;\n            }\n            .TemperatureValue {\n                display: block;\n                position: relative;\n                font-size: 3.5rem;\n                line-height: .96em;\n                font-weight: 500;\n            }\n            .phraseValue {\n            \tfont-size: 1rem;\n                font-weight: 700;\n            }\n            .current-weather-secondary {\n            \tdisplay: flex;\n                align-items: flex-end;\n                flex-direction: column;\n            }\n            .hourly-forcast {\n            \tborder: 1px solid #0000ff;\n                padding: 5px;\n            }\n            .weatherTable-columns {\n            \tmargin-top: 0;\n                padding: 0 8px;\n                display: flex;\n                justify-content: center;\n                box-sizing: border-box;\n                list-style-type: none;\n            }\n            .column {\n            \tpadding: 0 5px;\n                margin: auto;\n            }\n            .column-innerWrapper {\n            \tdisplay: flex;\n                align-items: center;\n                justify-content: flex-end;\n                flex-direction: column;\n                font-weight: 400;\n            }\n            .column-label {\n                margin: 0;\n                padding-bottom: 5px;\n                text-align: center;\n            }\n            .column-temp {\n            \tfont-size: 1.125rem;\n            }\n            .column-icon {\n            \tmargin: 5px 0 0;\n            \tposition: relative;\n            }\n            .column-precip {\n            \tfont-size: .75rem;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>${title}</h1>\n        <div class=\"main-content\">\n        \t${main_content}\n        </div>\n        <div class=\"time\">${msg.data.time}</div>\n    </body>\n</html>\n`;\nmsg.payload = html;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 240,
        "wires": [
            [
                "fa43f617.742228"
            ]
        ]
    },
    {
        "id": "e74ac52c.8d5748",
        "type": "debug",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 280,
        "wires": []
    },
    {
        "id": "f3f7db1.61ac128",
        "type": "function",
        "z": "dbb98f2a.d9d2f",
        "name": "Save Global Functions",
        "func": "global.set('wordsCount', (notification) => {\n  const pattern = '\\\\w+';\n  const reg = new RegExp(pattern, 'g');\n  return (notification.match(reg) || []).length;\n}, 'memoryOnly');\n\nglobal.set('getReadingTime', (notification) => {\n  const WORDS_PER_MIN = 275;\n  const wordCount = global.get('wordsCount', 'memoryOnly')(notification) //wordsCount(notification);\n  const wordTime = wordCount / WORDS_PER_MIN;\n  const wordTimeMilliSec =  wordTime * 60 * 1000;\n  return Math.ceil(wordTimeMilliSec);\n}, 'memoryOnly');\n\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "7495ac6a.820ea4",
        "type": "inject",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.01",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "f3f7db1.61ac128"
            ]
        ]
    },
    {
        "id": "42fa02a8.4c18fc",
        "type": "change",
        "z": "67c61941.053d58",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "image/jpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 100,
        "wires": [
            [
                "769165e4.dc545c"
            ]
        ]
    },
    {
        "id": "e0357ec7.4280f",
        "type": "inject",
        "z": "67c61941.053d58",
        "name": "blank image",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"w\":640,\"h\":480,\"background\":\"#ffffff\"}",
        "payloadType": "json",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "f660db34.b733a8",
                "c3a7b38c.52c78"
            ]
        ]
    },
    {
        "id": "7e192795.f88078",
        "type": "debug",
        "z": "67c61941.053d58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 640,
        "wires": []
    },
    {
        "id": "e7787809.ac9b18",
        "type": "http in",
        "z": "67c61941.053d58",
        "name": "",
        "url": "/img",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "684f1c1f.438c94"
            ]
        ]
    },
    {
        "id": "684f1c1f.438c94",
        "type": "function",
        "z": "67c61941.053d58",
        "name": "",
        "func": "msg.payload = \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAHgAoADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9+phlfxqJThh9anI3UUAFRD/XfjUtGOaACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAaj7jTqig+9+FS0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUARQfeqWmqm2ngbNLTU606gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBqdadTU606gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBqdadTVXBp1ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAGc0U1PvU6gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBqdadTU606gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBqdadTU606gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAxiiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKjhnMrdO1SUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAV7XiT8KsVXthh6sUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUANVcGnf/2Q==\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            [
                "e22cc642.7ae4d8"
            ]
        ]
    },
    {
        "id": "6226623d.f16dbc",
        "type": "change",
        "z": "67c61941.053d58",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "image/jpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "44430e42.cfa8e"
            ]
        ]
    },
    {
        "id": "44430e42.cfa8e",
        "type": "http response",
        "z": "67c61941.053d58",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 300,
        "wires": []
    },
    {
        "id": "3cb2c4e8.b09cec",
        "type": "inject",
        "z": "67c61941.053d58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "684f1c1f.438c94"
            ]
        ]
    },
    {
        "id": "26a665a8.e0708a",
        "type": "debug",
        "z": "67c61941.053d58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "f660db34.b733a8",
        "type": "jimp-image",
        "z": "67c61941.053d58",
        "name": "Batch print texts",
        "data": "payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "[{\"name\":\"print\",\"parameters\":[\"FONT_SANS_64_BLACK\",10,0,{\"text\":\"Class\",\"alignmentX\":\"Jimp.HORIZONTAL_ALIGN_LEFT\",\"alignmentY\":\"Jimp.VERTICAL_ALIGN_TOP\"},-1,-1]},{\"name\":\"print\",\"parameters\":[\"FONT_SANS_32_BLACK\",10,70,{\"text\":\"Text line 2 \\n Working or not?\",\"alignmentX\":\"Jimp.HORIZONTAL_ALIGN_LEFT\",\"alignmentY\":\"Jimp.VERTICAL_ALIGN_TOP\"},-1,-1]},{\"name\":\"print\",\"parameters\":[\"FONT_SANS_16_BLACK\",10,80,{\"text\":\"Text line 3\",\"alignmentX\":\"Jimp.HORIZONTAL_ALIGN_RIGHT\",\"alignmentY\":\"Jimp.VERTICAL_ALIGN_TOP\"},-1,-1]}]",
        "parameter1Type": "json",
        "parameter2": "0",
        "parameter2Type": "num",
        "parameter3": "0",
        "parameter3Type": "num",
        "parameter4": "Text line 1",
        "parameter4Type": "str",
        "parameter5": "HORIZONTAL_ALIGN_LEFT",
        "parameter5Type": "AlignX",
        "parameter6": "VERTICAL_ALIGN_TOP",
        "parameter6Type": "AlignY",
        "parameter7": "",
        "parameter7Type": "auto",
        "parameter8": "",
        "parameter8Type": "auto",
        "sendProperty": "payload",
        "parameterCount": 1,
        "jimpFunction": "batch",
        "selectedJimpFunction": {
            "name": "batch",
            "fn": "batch",
            "description": "apply one or more functions",
            "parameters": [
                {
                    "name": "options",
                    "type": "json",
                    "required": true,
                    "hint": "an object or an array of objects containing {\"name\" : \"function_name\", \"parameters\" : [x,y,z]}.  Refer to info on side panel}"
                }
            ]
        },
        "x": 140,
        "y": 500,
        "wires": [
            [
                "f3cc5dcb.4019f",
                "2c2a1b6a.9c23f4"
            ]
        ],
        "icon": "font-awesome/fa-image"
    },
    {
        "id": "c3a7b38c.52c78",
        "type": "jimp-image",
        "z": "67c61941.053d58",
        "name": "Line breaks (\\r or \\n)",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "FONT_SANS_12_BLACK",
        "parameter1Type": "jimpFont",
        "parameter2": "0",
        "parameter2Type": "num",
        "parameter3": "0",
        "parameter3Type": "num",
        "parameter4": "This is a long text that should wrap when it reaches the edge - a new line next\\r\\nThis is a long text that should wrap when - 2 new lines next\\n\\nit reaches the edge. - 3 new lines next\\n\\n\\nThis is a long text that should wrap when it reaches the edge. This is a long text that should wrap when it reaches the edge. This is a long text that should wrap when it reaches the edge. This is a long text that should wrap when it reaches the edge.",
        "parameter4Type": "str",
        "parameter5": "HORIZONTAL_ALIGN_LEFT",
        "parameter5Type": "AlignX",
        "parameter6": "VERTICAL_ALIGN_TOP",
        "parameter6Type": "AlignY",
        "parameter7": "",
        "parameter7Type": "auto",
        "parameter8": "",
        "parameter8Type": "auto",
        "parameterCount": 8,
        "jimpFunction": "print2",
        "selectedJimpFunction": {
            "name": "print aligned",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "group": "options",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "alignmentX",
                    "group": "options",
                    "type": "AlignX",
                    "required": false,
                    "hint": "X Alignment"
                },
                {
                    "name": "alignmentY",
                    "group": "options",
                    "type": "AlignY",
                    "required": false,
                    "hint": "Y Alignment"
                },
                {
                    "name": "maxWidth",
                    "type": "auto|num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "auto|num",
                    "required": false,
                    "hint": ""
                }
            ]
        },
        "x": 360,
        "y": 420,
        "wires": [
            [
                "343cd409.7a07bc"
            ]
        ],
        "icon": "font-awesome/fa-image"
    },
    {
        "id": "2c2a1b6a.9c23f4",
        "type": "jimp-image",
        "z": "67c61941.053d58",
        "name": "written.jpg",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "written.jpg",
        "parameter1Type": "str",
        "parameter2": "true",
        "parameter2Type": "bool",
        "parameter3": "0",
        "parameter3Type": "str",
        "parameter4": "RESIZE_NEAREST_NEIGHBOR",
        "parameter4Type": "Jimp",
        "parameter5": "",
        "parameter5Type": "",
        "parameter6": "",
        "parameter6Type": "",
        "parameter7": "",
        "parameter7Type": "",
        "parameter8": "",
        "parameter8Type": "",
        "sendProperty": "payload",
        "parameterCount": 1,
        "jimpFunction": "write",
        "selectedJimpFunction": {
            "name": "write",
            "fn": "write",
            "description": "Write to file. NOTE: You can specify an alternative file extension type to change the type. Currently support types are jpg, png, bmp.",
            "parameters": [
                {
                    "name": "filename",
                    "type": "str",
                    "required": true,
                    "hint": "Name of the file",
                    "defaultType": "str"
                }
            ]
        },
        "x": 130,
        "y": 560,
        "wires": [
            [
                "7e192795.f88078"
            ]
        ],
        "icon": "font-awesome/fa-image"
    },
    {
        "id": "e22cc642.7ae4d8",
        "type": "jimp-image",
        "z": "67c61941.053d58",
        "name": "Batch print texts",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "[{\"name\":\"print\",\"parameters\":[\"FONT_SANS_64_BLACK\",10,0,{\"text\":\"Class\",\"alignmentX\":\"Jimp.HORIZONTAL_ALIGN_LEFT\",\"alignmentY\":\"Jimp.VERTICAL_ALIGN_TOP\"},-1,-1]},{\"name\":\"print\",\"parameters\":[\"FONT_SANS_32_BLACK\",10,70,{\"text\":\"Text line 2 \\n Working or not?\",\"alignmentX\":\"Jimp.HORIZONTAL_ALIGN_LEFT\",\"alignmentY\":\"Jimp.VERTICAL_ALIGN_TOP\"},-1,-1]},{\"name\":\"print\",\"parameters\":[\"FONT_SANS_16_BLACK\",10,80,{\"text\":\"Text line 3\",\"alignmentX\":\"Jimp.HORIZONTAL_ALIGN_RIGHT\",\"alignmentY\":\"Jimp.VERTICAL_ALIGN_TOP\"},-1,-1]}]",
        "parameter1Type": "json",
        "parameter2": "0",
        "parameter2Type": "num",
        "parameter3": "0",
        "parameter3Type": "num",
        "parameter4": "Text line 1",
        "parameter4Type": "str",
        "parameter5": "HORIZONTAL_ALIGN_LEFT",
        "parameter5Type": "AlignX",
        "parameter6": "VERTICAL_ALIGN_TOP",
        "parameter6Type": "AlignY",
        "parameter7": "",
        "parameter7Type": "auto",
        "parameter8": "",
        "parameter8Type": "auto",
        "sendProperty": "payload",
        "parameterCount": 1,
        "jimpFunction": "batch",
        "selectedJimpFunction": {
            "name": "batch",
            "fn": "batch",
            "description": "apply one or more functions",
            "parameters": [
                {
                    "name": "options",
                    "type": "json",
                    "required": true,
                    "hint": "an object or an array of objects containing {\"name\" : \"function_name\", \"parameters\" : [x,y,z]}.  Refer to info on side panel}"
                }
            ]
        },
        "x": 420,
        "y": 300,
        "wires": [
            [
                "6226623d.f16dbc"
            ]
        ],
        "icon": "font-awesome/fa-image"
    },
    {
        "id": "323c0900.6a09b8",
        "type": "image viewer",
        "z": "67c61941.053d58",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 490,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f3cc5dcb.4019f",
        "type": "image viewer",
        "z": "67c61941.053d58",
        "name": "",
        "width": "300",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 310,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "343cd409.7a07bc",
        "type": "image viewer",
        "z": "67c61941.053d58",
        "name": "",
        "width": "300",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 630,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "962eb1ff.2e969",
        "type": "link out",
        "z": "dbb98f2a.d9d2f",
        "name": "Fetch",
        "links": [
            "ed8df26c.21409"
        ],
        "x": 345,
        "y": 100,
        "wires": []
    },
    {
        "id": "ed8df26c.21409",
        "type": "link in",
        "z": "dbb98f2a.d9d2f",
        "name": "Fetch Request",
        "links": [
            "962eb1ff.2e969"
        ],
        "x": 155,
        "y": 500,
        "wires": [
            [
                "5fa99be0.01fb04"
            ]
        ]
    },
    {
        "id": "e17e1bbd.1be578",
        "type": "inject",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "_session",
                "v": "{}",
                "vt": "str"
            },
            {
                "p": "_session.id",
                "v": "testID",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "next",
        "payloadType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "4fb222e1.85337c"
            ]
        ]
    },
    {
        "id": "a42bde0f.38b17",
        "type": "inject",
        "z": "dbb98f2a.d9d2f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "_session",
                "v": "{}",
                "vt": "str"
            },
            {
                "p": "_session.id",
                "v": "testID",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "previous",
        "payloadType": "str",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "4fb222e1.85337c"
            ]
        ]
    }
]